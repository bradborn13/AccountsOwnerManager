{"version":3,"sources":["store/actions/actionTypes.js","axios/axios.js","store/actions/repositoryActions.js","components/Navigation/Navigation.js","components/Layout/Layout.js","components/Home/Home.js","components/ErrorPages/NotFound/NotFound.js","components/ErrorPages/InternalServer/InternalServer.js","components/OwnerComponents/OwnerAccounts/OwnerAccounts.js","containers/Owner/OwnerDetails/OwnerDetails.js","hoc/AsyncComponent/AsyncComponent.js","UI/Input/Input.js","Utility/InputConfiguration.js","Utility/FormUtility.js","components/Modals/SuccessModal/successModal.js","components/Modals/ErrorModal/errorModal.js","containers/Owner/CreateOwner/CreateOwner.js","containers/Owner/DeleteOwner/DeleteOwner.js","containers/Owner/UpdateOwner/UpdateOwner.js","containers/App.js","serviceWorker.js","store/reducers/repositoryReducers.js","store/reducers/errorHandlerReducer.js","index.js","store/actions/errorHandlerAction.js","hoc/Auxiliary/Auxiliary.js"],"names":["GET_DATA_SUCCESS","POST_DATA_SUCCESS","PUT_DATA_SUCCESS","DELETE_DATA_SUCCESS","CLOSE_ERROR_MODAL","CLOSE_SUCCESS_MODAL","HTTP_404_ERROR","HTTP_500_ERROR","HTTP_OTHER_ERROR","instance","axios","create","baseURL","headers","headerType","closeSuccessModal","props","url","type","actionTypes","getData","dispatch","get","then","response","data","catch","error","errorHandlerActions","postData","obj","post","postDataSuccess","putData","put","putDataSuccess","deleteData","delete","deleteDataSuccess","navigation","Col","md","Navbar","inverse","collapseOnSelect","Header","Brand","to","exact","Toggle","Nav","NavItem","eventKey","layout","Grid","Row","children","home","className","internalServer","ownerAccounts","accounts","map","account","key","id","accountType","format","dateCreated","Table","responsive","striped","OwnerDetails","componentDidMount","match","params","onGetData","renderTypeOfUserConditionally","owner","length","this","onClick","history","push","href","Alert","variant","name","dateOfBirth","OwnerAccounts","Component","connect","state","repository","repositoryActions","asyncComponent","importComponent","component","cmp","setState","default","C","input","inputField","errorMessage","invalid","shouldValidate","touched","elementType","FormGroup","controlId","sm","label","FormControl","value","onChange","changed","onBlur","blur","selected","dateFormat","readOnly","showYearDropdown","dropdownMode","returnInputConfiguration","element","validation","required","valid","address","maxLength","moment","convertStateToArrayOfFormObjects","formObject","formElementsArray","config","executeValidationAndReturnFormElement","event","updatedOwnerForm","formElement","target","validationResponse","checkValidity","isValid","validationObject","trim","countInvalidElements","ownerForm","successModal","Modal","show","backdrop","modalHeaderText","Body","modalBodyText","Footer","Button","bsStyle","successClick","okButtonText","errorModal","closeModal","CreateOwner","isFormValid","componentWillMount","handleChangeEvent","formUtilityActions","counter","createOwner","preventDefault","ownerToCreate","onCreateOwner","redirectToOwnerList","Form","horizontal","onSubmit","disabled","showSuccessModal","onCloseSuccessModal","showErrorModal","onCloseErrorModal","errorHandler","DeleteOwner","onGetOwnerById","deleteOwner","onDeleteOwner","Well","ControlLabel","htmlFor","mdOffset","UpdateOwner","componentWillReceiveProps","nextProps","nameObject","dateObject","addressObject","updateOwner","ownerToUpdate","onUpdateOwner","AsyncOwnerList","App","Layout","path","Home","InternalServer","NotFound","Boolean","window","location","hostname","initialState","executeGetDataSuccess","action","executePostDataSuccess","executePutDataSuccess","executeDeleteDataSuccess","executeCloseSuccessModal","reducer","execute404","execute500","executeOtherError","executeCloseErrorModal","actions","errorHandle","rootReducers","combineReducers","repositoryReducer","errorHandlerReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","closeErrorModal","handleHttpErrors","status","execute404Handler","execute500Handler","executeOtherHandler","auxiliary"],"mappings":"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","file":"static/js/main.12e656d2.chunk.js","sourcesContent":["export const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS';\r\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\r\nexport const PUT_DATA_SUCCESS = 'PUT_DATA_SUCCESS';\r\nexport const DELETE_DATA_SUCCESS = 'DELETE_DATA_SUCCESS';\r\n\r\nexport const CLOSE_ERROR_MODAL ='CLOSE_ERROR_MODAL';\r\nexport const CLOSE_SUCCESS_MODAL = 'CLOSE_SUCCESS_MODAL'; \r\n\r\nexport const HTTP_404_ERROR = 'HTTP_404_ERROR';\r\nexport const HTTP_500_ERROR = 'HTTP_500_ERROR';\r\nexport const HTTP_OTHER_ERROR = 'HTTP_OTHER_ERROR';","import axios from 'axios';\r\n \r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:5000',\r\n    headers: {\r\n        headerType: 'example header type'\r\n    }\r\n});\r\n \r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios/axios';\r\nimport * as errorHandlerActions from './errorHandlerAction';\r\n\r\nconst getDataSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.GET_DATA_SUCCESS,\r\n        data: data\r\n    }\r\n};\r\n\r\nexport const closeSuccessModal =(props,url) =>{\r\n    return {\r\n        type:actionTypes.CLOSE_SUCCESS_MODAL,\r\n        props:props,\r\n        url:url\r\n    }\r\n};\r\n\r\nexport const getData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.get(url)\r\n            .then(response => {\r\n                dispatch(getDataSuccess(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHttpErrors(error, props));\r\n            });\r\n    };\r\n};\r\nconst postDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.POST_DATA_SUCCESS,\r\n        response: response\r\n    };\r\n};\r\n\r\nexport const postData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.post(url, obj)\r\n            .then(response => {\r\n                dispatch(postDataSuccess(response));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHttpErrors(error, props));\r\n            });\r\n    };\r\n};\r\n\r\nconst putDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    };\r\n};\r\n\r\nexport const putData = (url, obj, props) => {\r\n    return (dispatch) => {\r\n        axios.put(url, obj)\r\n            .then(response => {\r\n                dispatch(putDataSuccess(response));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHttpErrors(error, props));\r\n            });\r\n    };\r\n};\r\n\r\nconst deleteDataSuccess = (response) => {\r\n    return {\r\n        type: actionTypes.PUT_DATA_SUCCESS,\r\n        response: response\r\n    };\r\n};\r\n\r\nexport const deleteData = (url, props) => {\r\n    return (dispatch) => {\r\n        axios.delete(url)\r\n            .then(response => {\r\n                dispatch(deleteDataSuccess(response));\r\n            })\r\n            .catch(error => {\r\n                dispatch(errorHandlerActions.handleHttpErrors(error, props));\r\n            });\r\n    };\r\n};","\r\nimport React from 'react';\r\nimport './Navigation.css';\r\nimport { Col, Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n\r\nconst navigation = (props) => {\r\n    return (\r\n        \r\n//         <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n//   <Navbar.Brand href=\"/\">NAVBAR EMP</Navbar.Brand>\r\n//   <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n//   <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n//     <Nav className=\"mr-auto\">\r\n//           <LinkContainer to={'/owner-list'} exact>   \r\n//                             <NavItem eventkey={1}  className=\"color-nav-section\">\r\n//                                 Owner List                            \r\n//                             </NavItem>\r\n//                         </LinkContainer>\r\n//                         <LinkContainer to={'/owner-li'} exact>\r\n//                             <NavItem eventkey={1} className=\"color-nav-section\">\r\n//                                Something else                          \r\n//                             </NavItem>\r\n//                         </LinkContainer>\r\n  \r\n//     </Nav>\r\n//   </Navbar.Collapse>\r\n// </Navbar>\r\n<Col md={12}>\r\n<Navbar inverse collapseOnSelect>\r\n    <Navbar.Header>\r\n    <Navbar.Brand>\r\n            <NavLink to={'/'} exact >Account-Owner</NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n    </Navbar.Header>\r\n        <Nav >\r\n            <LinkContainer to={'/owner-list'} exact>\r\n                <NavItem eventKey={1}>\r\n                    Owner Actions\r\n                </NavItem>\r\n            </LinkContainer>\r\n            <LinkContainer to={'/account-list'}>\r\n                <NavItem eventKey={2}>\r\n                    Account Actions\r\n                </NavItem>\r\n            </LinkContainer>\r\n        </Nav>   \r\n</Navbar>\r\n</Col>\r\n    )\r\n}\r\n \r\nexport default navigation;","import React from 'react';\r\nimport {Grid,Row} from 'react-bootstrap';\r\nimport Navigation from '../Navigation/Navigation';\r\n\r\nconst layout = (props) =>{\r\n    return(\r\n\r\n            <Grid>\r\n                <Row>\r\n            <Navigation/>\r\n            </Row>\r\n\r\n            <main>\r\n                {props.children}\r\n            </main>\r\n            </Grid>\r\n\r\n            )\r\n}\r\nexport default layout;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './Home.css';\r\n \r\nconst home = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <div className={'homeText'}>\r\n                    \"WELCOME TO ACCOUNT-OWNER APPLICATION\"\r\n                </div>\r\n            </Col>\r\n            \r\n        </Row>\r\n    )\r\n}\r\n \r\nexport default home;","\r\nimport React from 'react';\r\nimport './NotFound.css';\r\nimport { Col, Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst navigation = (props) => {\r\n    return (\r\n        <p className={'notFound'}>\r\n        \"404 Content not Found\"\r\n    </p>\r\n    )\r\n}\r\n \r\nexport default navigation;","import React from 'react';\r\nimport InternalServer from './InternalServer.css';\r\n\r\nconst internalServer = (props) => {\r\n    return(\r\n        <p className={'iternalServer'}>{\"500 SERVER ERROR, CONTACT ADMINISTRATOR\"}</p>\r\n    )\r\n}\r\nexport default internalServer;","import React from 'react';\r\nimport { Col,Row,Table } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\n\r\nconst ownerAccounts = (props) =>{\r\n    let accounts = null;\r\n    if(props.accounts){\r\n        accounts = props.accounts.map(account =>{\r\n            return(\r\n                <tr key={account.id}>\r\n                    <td>{account.accountType}</td>\r\n                    <td><Moment format=\"DD/MM/YYYY\">{account.dateCreated}</Moment></td>\r\n                </tr>\r\n            );\r\n        })\r\n    }\r\nreturn(\r\n    <Row>\r\n        <Col md={12}>\r\n            <Table responsive striped>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Account Type</th>\r\n                        <th>Date Created</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                    {accounts}\r\n                </tbody>\r\n            </Table>\r\n        </Col>\r\n    </Row>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default ownerAccounts\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Row,Alert,Col} from 'react-bootstrap';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport Moment from 'react-moment';\r\nimport OwnerAccounts from '../../../components/OwnerComponents/OwnerAccounts/OwnerAccounts';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst redirectToOwnerList = ( history) =>{\r\n\r\n    history.push('/owner-list');\r\n}\r\nclass OwnerDetails extends Component {\r\n    \r\n    componentDidMount = () => {\r\n        let id = this.props.match.params.id;\r\n        let url ='api/owner/' + id + '/accounts';\r\n        this.props.onGetData(url,{...this.props});\r\n    }\r\n\r\n     renderTypeOfUserConditionally = (owner) => {\r\n    let typeOfUser= null;\r\n\r\n    if(owner.accounts && owner.accounts.length <=2){\r\n    typeOfUser = (\r\n        <Row>\r\n            <Col md={3}><strong>Type of user: </strong></Col>\r\n            <Col md={3}><span className={'text-success'}>Beginner user.</span></Col>\r\n        </Row>\r\n    )\r\n}else{\r\n    typeOfUser=(\r\n        <Row>\r\n            <Col md={3}>\r\n                <strong>Type of user:</strong>\r\n            </Col>\r\n            <Col md={3}>\r\n                <span className={'text-info'}>Advanced user.</span>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nreturn typeOfUser;\r\n}\r\n\r\n    \r\n    render(){\r\n        const owner = this.props.data;\r\n   \r\n        return (\r\n            <Aux>\r\n                <button onClick={()=> { redirectToOwnerList(this.props.history)}}><a href=\"../../../../public/left-arrow-angle.png\"></a>Back</button>\r\n                <a href=\"../../../../public/left-arrow-angle.png\"></a>\r\n                <Alert key={'secondary'} variant=\"secondary\">\r\n                    <Row>\r\n                        <Col md={3}>\r\n                            <strong>Owner name:</strong>\r\n                        </Col>\r\n                        <Col md={3}>{owner.name}</Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={3}>\r\n                            <strong>Date of birth: </strong>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Moment format=\"DD/MM/YYYY\">\r\n                        {owner.dateOfBirth}\r\n                      </Moment>\r\n                        </Col>\r\n                    </Row>\r\n                    {this.renderTypeOfUserConditionally(owner)}\r\n                </Alert>\r\n                <OwnerAccounts accounts={owner.accounts}/>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        data:state.repository.data\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) =>{\r\n    return {\r\n        onGetData: (url,props) =>dispatch(repositoryActions.getData(url,props))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(OwnerDetails)","import React,{Component} from 'react';\r\n\r\nconst asyncComponent =(importComponent) =>{\r\n    return class extends Component{\r\n        state = {\r\n            component: null\r\n        }\r\n        componentDidMount(){\r\n            importComponent().then(cmp => {\r\n                this.setState({component:cmp.default});\r\n            });\r\n        }\r\n        render(){\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null;\r\n        }\r\n    }\r\n}\r\nexport default asyncComponent;","import React from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport {FormGroup, Col, FormControl} from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport './Input.css';\r\n \r\nconst input = (props) =>{\r\n    let inputField = null;\r\n    let errorMessage= null;\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        errorMessage = (<em>{props.errorMessage}</em>);\r\n    }\r\n    switch(props.elementType){\r\n    case 'input' :\r\n        inputField=(\r\n            <FormGroup controlId={props.id}>\r\n                <Col sm={2} className=\"col-4\">\r\n                   \r\n                    {props.label}\r\n\r\n                </Col>\r\n                <Col sm={6}>\r\n                    <FormControl type={props.type} value={props.value} onChange={props.changed} onBlur={props.blur}></FormControl>\r\n                </Col>\r\n                <Col>\r\n                <em>{errorMessage}</em></Col>\r\n            </FormGroup>\r\n        )\r\n        break;\r\n        case 'datePicker':\r\n                inputField = (\r\n                    <FormGroup controlId={props.id} className=\"col-4\">\r\n                        <Col sm={2}>\r\n                            {props.label}\r\n                        </Col>\r\n                        <Col sm={6}>\r\n                            <DatePicker selected={props.value} dateFormat=\"MM/DD/YYYY\" readOnly\r\n                                onChange={props.changed} className='datePickerControl' \r\n                                showYearDropdown dropdownMode=\"select\"/>\r\n                        </Col>\r\n                        <Col>\r\n                         <em>{errorMessage}</em>\r\n                        </Col>\r\n                    </FormGroup>\r\n                )\r\n                break;\r\n                default:inputField=null;\r\n    }\r\n    return (\r\n        <Aux>\r\n            {inputField}\r\n        </Aux>\r\n    )\r\n}\r\nexport default input;","import moment from 'moment';\r\nexport const  returnInputConfiguration = () => {\r\n    return {\r\n        name:{\r\n            element:'input',type:'text', value:'',\r\n            validation: {required: true}, valid:false,touched:false,\r\n            errorMessage: '',label:'Name:'\r\n        },\r\n        address:{\r\n            element:    'input',type:'text', value:'',\r\n            validation: {required: true,maxLength:60}, valid:false,touched:false,\r\n            errorMessage: '',label:'Address:'\r\n        },\r\n        dateOfBirth:{\r\n            element:'datePicker',type:'text', value:moment(),\r\n            valid:false,touched:false,\r\n            errorMessage: '',label:'Date of birth:'\r\n        }\r\n    }\r\n}","export const convertStateToArrayOfFormObjects = formObject => {\r\n  const formElementsArray = [];\r\n  for (let key in formObject) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: formObject[key]\r\n    });\r\n  }\r\n  return formElementsArray;\r\n};\r\n\r\nexport const executeValidationAndReturnFormElement = (\r\n  event,\r\n  updatedOwnerForm,\r\n  id\r\n) => {\r\n  let formElement = { ...updatedOwnerForm[id] };\r\n  formElement.value = id === 'dateOfBirth' ? event : event.target.value;\r\n  formElement.touched = true;\r\n\r\n  const validationResponse = checkValidity(\r\n    formElement.value,\r\n    formElement.validation\r\n  );\r\n\r\n  formElement.valid = validationResponse.isValid;\r\n  formElement.errorMessage = validationResponse.errorMessage;\r\n  return formElement;\r\n};\r\n\r\nconst checkValidity = (value, validation) => {\r\n  let validationObject = {\r\n    isValid: true,\r\n    errorMessage: ''\r\n  };\r\n  if (validation) {\r\n    if (validation.required) {\r\n      validationObject.isValid = value.trim() !== '';\r\n      validationObject.errorMessage = validationObject.isValid\r\n        ? ''\r\n        : 'Field is required';\r\n    }\r\n    if (validationObject.isValid && validation.maxLength) {\r\n      validationObject.isValid = value.length <= 60;\r\n      validationObject.errorMessage = 'Not allowed more than 60 characters';\r\n    }\r\n    return validationObject;\r\n  } else {\r\n    return validationObject;\r\n  }\r\n};\r\nexport const countInvalidElements = ownerForm => {\r\n  let countInvalidElements = 0;\r\n  for (let element in ownerForm) {\r\n    if (!ownerForm[element].valid) {\r\n      countInvalidElements = countInvalidElements + 1;\r\n      break;\r\n    }\r\n  }\r\n  return countInvalidElements;\r\n};\r\n","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport {Modal,Button} from 'react-bootstrap';\r\nimport '../ModalStyles.css';\r\n \r\nconst successModal =(props) =>{\r\n    return(\r\n        <Aux>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button bsStyle=\"success\" onClick={props.successClick}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Aux>\r\n    )\r\n}\r\nexport default successModal;","\r\nimport React from 'react';\r\nimport { Modal, Button } from 'react-bootstrap';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport '../ModalStyles.css';\r\n \r\nconst errorModal = (props) => {\r\n    return (\r\n        <Aux>\r\n            <Modal show={props.show} backdrop='static'>\r\n                <Modal.Header>\r\n                    {props.modalHeaderText}\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>{props.modalBodyText}</p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button bsStyle=\"danger\" onClick={props.closeModal}>{props.okButtonText}</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </Aux>\r\n    )\r\n}\r\n \r\nexport default errorModal;","import React, { Component } from 'react';\r\nimport Input from '../../../UI/Input/Input';\r\nimport { Form, Button, FormGroup, Col, Alert } from 'react-bootstrap';\r\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\r\nimport * as formUtilityActions from '../../../Utility/FormUtility';\r\nimport { connect } from 'react-redux';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerAction';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/successModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/errorModal';\r\n\r\nclass CreateOwner extends Component {\r\n  state = {\r\n    ownerForm: {},\r\n    isFormValid: false\r\n  };\r\n\r\n  componentWillMount = () => {\r\n    this.setState({ ownerForm: returnInputConfiguration() });\r\n  };\r\n\r\n  handleChangeEvent = (event, id) => {\r\n    const updatedOwnerForm = { ...this.state.ownerForm };\r\n    updatedOwnerForm[\r\n      id\r\n    ] = formUtilityActions.executeValidationAndReturnFormElement(\r\n      event,\r\n      updatedOwnerForm,\r\n      id\r\n    );\r\n    const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\r\n    this.setState({ ownerForm: updatedOwnerForm, isFormValid: counter === 0 });\r\n  };\r\n\r\n  createOwner = event => {\r\n    event.preventDefault();\r\n\r\n    const ownerToCreate = {\r\n      name: this.state.ownerForm.name.value,\r\n      address: this.state.ownerForm.address.value,\r\n      dateOfBirth: this.state.ownerForm.dateOfBirth.value\r\n    };\r\n    const url = '/api/owner';\r\n    this.props.onCreateOwner(url, ownerToCreate, { ...this.props });\r\n  };\r\n  redirectToOwnerList = () => {\r\n    this.props.history.push('/owner-list');\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects(\r\n      { ...this.state.ownerForm }\r\n    );\r\n\r\n    return (\r\n      <Alert key={'secondary'} variant=\"secondary\">\r\n        <Form horizontal onSubmit={this.createOwner}>\r\n          {formElementsArray.map(element => {\r\n            return (\r\n              <Input\r\n                key={element.id}\r\n                elementType={element.config.element}\r\n                id={element.id}\r\n                label={element.config.label}\r\n                type={element.config.type}\r\n                value={element.config.value}\r\n                changed={event => this.handleChangeEvent(event, element.id)}\r\n                errorMessage={element.config.errorMessage}\r\n                invalid={!element.config.valid}\r\n                shouldValidate={element.config.validation}\r\n                touched={element.config.touched}\r\n                blur={event => this.handleChangeEvent(event, element.id)}\r\n              />\r\n            );\r\n          })}\r\n          <br />\r\n\r\n          <FormGroup>\r\n            <Col className=\"offset-md-6 col-md-1\">\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"info\"\r\n                disabled={!this.state.isFormValid}\r\n              >\r\n                Create\r\n              </Button>\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"offset-md-1\"\r\n                onClick={this.redirectToOwnerList}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </FormGroup>\r\n          <SuccessModal\r\n            show={this.props.showSuccessModal}\r\n            modalHeaderText={'Success message'}\r\n            modalBodyText={'Action Completed Succesfully'}\r\n            okButtonText={'OK'}\r\n            successClick={() => {\r\n              this.props.onCloseSuccessModal('/owner-list', this.props);\r\n            }}\r\n          />\r\n          <ErrorModal\r\n            show={this.props.showErrorModal}\r\n            modalHeaderText={'Erorr message'}\r\n            modalBodyText={this.props.errorMessage}\r\n            okButtonText={'OK'}\r\n            successClick={() => {\r\n              this.props.onCloseErrorModal();\r\n            }}\r\n          />\r\n        </Form>\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    showSuccessModal: state.repository.showSuccessModal,\r\n    showErrorModal: state.repository.showErrorModal,\r\n    errorMessage: state.errorHandler.errorMessage\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onCreateOwner: (url, owner, props) =>\r\n      dispatch(repositoryActions.postData(url, owner, props)),\r\n    onCloseSuccessModal: (url, props) =>\r\n      dispatch(repositoryActions.closeSuccessModal(props, url)),\r\n    onCloseErrorModal: () => dispatch(errorHandlerActions.closeErrorModal())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateOwner);\r\n","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerAction';\r\nimport { connect } from 'react-redux';\r\nimport { Well, Button, Col, Row, ControlLabel } from 'react-bootstrap';\r\nimport Moment from 'react-moment';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/successModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/errorModal';\r\nimport { ECONNRESET } from 'constants';\r\n\r\nclass DeleteOwner extends Component {\r\n  componentDidMount = () => {\r\n    const id = this.props.match.params.id;\r\n    const url = '/api/owner/' + id;\r\n    this.props.onGetOwnerById(url, { ...this.props });\r\n  };\r\n  redirectToOwnerList = () => {\r\n    this.props.history.push('/owner-list');\r\n  };\r\n  deleteOwner = event => {\r\n    event.preventDefault();\r\n\r\n    const url = '/api/owner/' + this.props.data.id;\r\n    this.props.onDeleteOwner(url, { ...this.props });\r\n  };\r\n  render() {\r\n    let owner = { ...this.props.data };\r\n    return (\r\n      <Aux>\r\n        <Row>\r\n          <Col md={10}>\r\n            <Well>\r\n              <Row>\r\n                <Col md={3}>\r\n                  <ControlLabel htmlFor=\"name\">Owners name:</ControlLabel>\r\n                </Col>\r\n                <Col md={7}>\r\n                  <span name=\"name\">{owner.name ? owner.name : 'empty'}</span>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={3}>\r\n                  <ControlLabel htmlFor=\"dateOfBirth\">\r\n                    Date of birth:\r\n                  </ControlLabel>\r\n                </Col>\r\n                <Col md={7}>\r\n                  <span name=\"dateOfBirth\">\r\n                    <Moment format=\"MM/DD/YYYY\">\r\n                      {owner.dateOfBirth ? owner.dateOfBirth : 'empty'}\r\n                    </Moment>\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md={3}>\r\n                  <ControlLabel htmlFor=\"address\">Address:</ControlLabel>\r\n                </Col>\r\n                <Col md={7}>\r\n                  <span name=\"address\">\r\n                    {owner.address ? owner.address : 'empty'}\r\n                  </span>\r\n                </Col>\r\n              </Row>\r\n            </Well>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col mdOffset={8} md={1}>\r\n            <Button type=\"submit\" bsStyle=\"info\" onClick={this.deleteOwner}>\r\n              Delete\r\n            </Button>\r\n          </Col>\r\n          <Col md={1}>\r\n            <Button bsStyle=\"danger\" onClick={this.redirectToOwnerList}>\r\n              Cancel\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <SuccessModal\r\n          show={this.props.showSuccessModal}\r\n          modalHeaderText={'Success message'}\r\n          modalBodyText={'Action completed successfylly'}\r\n          okButtonText={'OK'}\r\n          successClick={() =>\r\n            this.props.onCloseSuccessModal('/owner-List', { ...this.props })\r\n          }\r\n        />\r\n        <ErrorModal\r\n          show={this.props.showErrorModal}\r\n          modalHeaderText={'Error message'}\r\n          modalBodyText={this.props.errorMessage}\r\n          okButtonText={'OK'}\r\n          closeModal={() => this.props.onCloseErrorModal()}\r\n        />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.repository.data,\r\n    showSuccessModal: state.repository.showSuccessModal,\r\n    showErrorModal: state.errorHandler.showErrorModal,\r\n    errorMessage: state.errorHandler.errorMessage\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGetOwnerById: (url, props) =>\r\n      dispatch(repositoryActions.getData(url, props)),\r\n    onDeleteOwner: (url, props) =>\r\n      dispatch(repositoryActions.deleteData(url, props)),\r\n    onCloseSuccessModal: (url, props) =>\r\n      dispatch(repositoryActions.closeSuccessModal(props, url)),\r\n    onCloseErrorModal: () => dispatch(errorHandlerActions.closeErrorModal())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteOwner);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Well, Form, FormGroup, Col, Button } from 'react-bootstrap';\r\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\r\nimport * as formUtilityActions from '../../../Utility/FormUtility';\r\nimport Input from '../../../UI/Input/Input';\r\nimport moment from 'moment';\r\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\r\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerAction';\r\nimport SuccessModal from '../../../components/Modals/SuccessModal/successModal';\r\nimport ErrorModal from '../../../components/Modals/ErrorModal/errorModal';\r\nclass UpdateOwner extends Component {\r\n  state = {\r\n    ownerForm: [],\r\n    isFormValid: true\r\n  };\r\n  componentWillMount = () => {\r\n    this.setState({\r\n      ownerForm: returnInputConfiguration()\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const id = this.props.match.params.id;\r\n    const url = '/api/owner/' + id;\r\n    this.props.onGetOwnerById(url, {\r\n      ...this.props\r\n    });\r\n  };\r\n  componentWillReceiveProps = nextProps => {\r\n    const updatedOwnerForm = {\r\n      ...this.state.ownerForm\r\n    };\r\n    let nameObject = {\r\n      ...updatedOwnerForm.name\r\n    };\r\n    let dateObject = {\r\n      ...updatedOwnerForm.dateOfBirth\r\n    };\r\n    let addressObject = {\r\n      ...updatedOwnerForm.address\r\n    };\r\n\r\n    nameObject.value = nextProps.data.name;\r\n    nameObject.valid = true;\r\n    dateObject.value = moment(nextProps.data.dateOfBirth);\r\n    addressObject.value = nextProps.data.address;\r\n    addressObject.valid = true;\r\n\r\n    updatedOwnerForm['name'] = nameObject;\r\n    updatedOwnerForm['dateOfBirth'] = dateObject;\r\n    updatedOwnerForm['address'] = addressObject;\r\n    this.setState({\r\n      ownerForm: updatedOwnerForm\r\n    });\r\n  };\r\n\r\n  handleChangeEvent = (event, id) => {\r\n    const updatedOwnerForm = {\r\n      ...this.state.ownerForm\r\n    };\r\n    updatedOwnerForm[\r\n      id\r\n    ] = formUtilityActions.executeValidationAndReturnFormElement(\r\n      event,\r\n      updatedOwnerForm,\r\n      id\r\n    );\r\n\r\n    const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\r\n\r\n    this.setState({\r\n      ownerForm: updatedOwnerForm,\r\n      isFormValid: counter === 0\r\n    });\r\n  };\r\n\r\n  redirectToOwnerList = () => {\r\n    this.props.history.push('/owner-list');\r\n  };\r\n\r\n  updateOwner = event => {\r\n    event.preventDefault();\r\n\r\n    const ownerToUpdate = {\r\n      name: this.state.ownerForm.name.value,\r\n      dateOfBirth: this.state.ownerForm.dateOfBirth.value,\r\n      address: this.state.ownerForm.address.value\r\n    };\r\n\r\n    const url = '/api/owner/' + this.props.data.id;\r\n\r\n    this.props.onUpdateOwner(url, ownerToUpdate, {\r\n      ...this.props\r\n    });\r\n  };\r\n  render() {\r\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects(\r\n      {\r\n        ...this.state.ownerForm\r\n      }\r\n    );\r\n\r\n    return (\r\n      <Well>\r\n        <Form horizontal onSubmit={this.updateOwner}>\r\n          {' '}\r\n          {formElementsArray.map(element => {\r\n            return (\r\n              <Input\r\n                key={element.id}\r\n                elementType={element.config.element}\r\n                id={element.id}\r\n                label={element.config.label}\r\n                type={element.config.type}\r\n                value={element.config.value}\r\n                changed={event => this.handleChangeEvent(event, element.id)}\r\n                errorMessage={element.config.errorMessage}\r\n                invalid={!element.config.valid}\r\n                shouldValidate={element.config.validation}\r\n                touched={element.config.touched}\r\n                blur={event => this.handleChangeEvent(event, element.id)}\r\n              />\r\n            );\r\n          })}{' '}\r\n          <br />\r\n          <FormGroup>\r\n            <Col mdOffset={6} md={1}>\r\n              <Button\r\n                type=\"submit\"\r\n                bsStyle=\"info\"\r\n                disabled={!this.state.isFormValid}\r\n              >\r\n                {' '}\r\n                Update{' '}\r\n              </Button>{' '}\r\n            </Col>{' '}\r\n            <Col md={1}>\r\n              <Button bsStyle=\"danger\" onClick={this.redirectToOwnerList}>\r\n                {' '}\r\n                Cancel{' '}\r\n              </Button>{' '}\r\n            </Col>{' '}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n        <SuccessModal\r\n          show={this.props.showSuccessModal}\r\n          modalHeaderText={'Success message'}\r\n          modalBodyText={'Action completed successfully'}\r\n          okButtonText={'OK'}\r\n          successClick={() =>\r\n            this.props.onCloseSuccessModal('/owner-List', {\r\n              ...this.props\r\n            })\r\n          }\r\n        />{' '}\r\n        <ErrorModal\r\n          show={this.props.showErrorModal}\r\n          modalHeaderText={'Error message'}\r\n          modalBodyText={this.props.errorMessage}\r\n          okButtonText={'OK'}\r\n          closeModal={() => this.props.onCloseErrorModal()}\r\n        />{' '}\r\n      </Well>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.repository.data,\r\n    showSuccessModal: state.repository.showSuccessModal,\r\n    showErrorModal: state.errorHandler.showErrorModal,\r\n    errorMessage: state.errorHandler.errorMessage\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGetOwnerById: (url, props) =>\r\n      dispatch(repositoryActions.getData(url, props)),\r\n    onUpdateOwner: (url, owner, props) =>\r\n      dispatch(repositoryActions.putData(url, owner, props)),\r\n    onCloseSuccessModal: (url, props) =>\r\n      dispatch(repositoryActions.closeSuccessModal(props, url)),\r\n    onCloseErrorModal: () => dispatch(errorHandlerActions.closeErrorModal())\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateOwner);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from '../components/Layout/Layout';\nimport Home from '../components/Home/Home.js';\nimport { BrowserRouter, Switch , Route} from 'react-router-dom';\nimport NotFound from '../components/ErrorPages/NotFound/NotFound';\nimport InternalServer from '../components/ErrorPages/InternalServer/InternalServer';\nimport OwnerDetails from '../containers/Owner/OwnerDetails/OwnerDetails';\nimport asyncComponent from '../hoc/AsyncComponent/AsyncComponent';\nimport CreateOwner from '../containers/Owner/CreateOwner/CreateOwner';\nimport DeleteOwner from '../containers/Owner/DeleteOwner/DeleteOwner';\nimport UpdateOwner from '../containers/Owner/UpdateOwner/UpdateOwner';\nconst AsyncOwnerList = asyncComponent(()=>{\n    return import('./Owner/OwnerList/OwnerList');\n})\n\n\nclass App extends Component { \n render(){\n     \n     return (\n         <BrowserRouter>\n            <Layout>\n                <Switch>\n                <Route path=\"/\" exact component={Home}/> \n                <Route path=\"/owner-list\" component={AsyncOwnerList} />\n                <Route path=\"/deleteOwner/:id\" component={DeleteOwner}/>\n                <Route path=\"/ownerDetails/:id\" component={OwnerDetails}/>\n                <Route path=\"/updateOwner/:id\" component={UpdateOwner}/>\n                <Route path=\"/createOwner\" component={CreateOwner}/>\n                <Route path=\"/500\" component={InternalServer}/>\n                <Route path=\"*\" exact component={NotFound}/>\n                </Switch>\n        </Layout> \n    </BrowserRouter> \n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    data:null,\r\n    showSuccessModal: false\r\n}\r\nconst executeGetDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        data: action.data\r\n    }\r\n}\r\n \r\nconst executePostDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true\r\n    }\r\n}\r\n \r\nconst executePutDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true\r\n    }\r\n}\r\n \r\nconst executeDeleteDataSuccess = (state, action) => {\r\n    return {\r\n        ...state,\r\n        showSuccessModal: true\r\n    }\r\n}\r\nconst executeCloseSuccessModal = (state,action) =>{\r\n    action.props.history.push(action.url);\r\n    return {\r\n       ...state,\r\n       showSuccessModal:false\r\n    }\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.GET_DATA_SUCCESS:\r\n            return executeGetDataSuccess(state, action);\r\n        case actionTypes.POST_DATA_SUCCESS:\r\n            return executePostDataSuccess(state, action);\r\n        case actionTypes.PUT_DATA_SUCCESS:\r\n            return executePutDataSuccess(state, action);\r\n        case actionTypes.DELETE_DATA_SUCCESS:\r\n            return executeDeleteDataSuccess(state, action);\r\n        case actionTypes.CLOSE_SUCCESS_MODAL:\r\n            return executeCloseSuccessModal(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n \r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { closeErrorModal } from '../actions/errorHandlerAction';\r\n\r\nconst initialState = {\r\n    showErrorModal:false,\r\n    errorMessage:''\r\n};\r\n\r\nconst execute404 = (state,action) =>{\r\n    action.props.history.push('/404')\r\n    return {...state}\r\n};\r\n\r\nconst execute500 = (state,action) =>{\r\n    action.props.history.push('/500');\r\n    return{...state};\r\n};\r\n\r\nconst executeOtherError = (state,action) =>{\r\nreturn{\r\n    ...state,\r\n    showErrorModal:true,\r\n    errorMessage:action.error.response.data\r\n    };\r\n};\r\nconst executeCloseErrorModal =(state,actions) =>{\r\n    return{\r\n        ...state,\r\n        showErrorModal: false,\r\n        errorMessage: ''\r\n    }\r\n}\r\n    const errorHandle = (state=initialState,action)=>{\r\n        switch(action.type){\r\n    case actionTypes.HTTP_404_ERROR:\r\n        return execute404(state,action);\r\n    case actionTypes.HTTP_500_ERROR:\r\n        return execute500(state,action);\r\n    case actionTypes.HTTP_OTHER_ERROR:\r\n        return executeOtherError(state,action);\r\n    case actionTypes.CLOSE_ERROR_MODAL:\r\n        return executeCloseErrorModal(state,action);\r\n    default:\r\n        return state;\r\n}\r\n};\r\nexport default errorHandle;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nimport repositoryReducer from './store/reducers/repositoryReducers';\nimport errorHandlerReducer from './store/reducers/errorHandlerReducer';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst rootReducers = combineReducers({\n  repository: repositoryReducer,\n  errorHandler: errorHandlerReducer\n});\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import * as actionTypes from './actionTypes';\r\n\r\nconst execute404Handler = props => {\r\n  return {\r\n    type: actionTypes.HTTP_404_ERROR,\r\n    props: props\r\n  };\r\n};\r\nconst execute500Handler = props => {\r\n  return {\r\n    type: actionTypes.HTTP_500_ERROR,\r\n    props: props\r\n  };\r\n};\r\nconst executeOtherHandler = props => {\r\n  return {\r\n    type: actionTypes.HTTP_OTHER_ERROR,\r\n    props: props\r\n  };\r\n};\r\nexport const closeErrorModal = () => {\r\n  return {\r\n    type: actionTypes.CLOSE_ERROR_MODAL\r\n  };\r\n};\r\nexport const handleHttpErrors = (error, props) => {\r\n  if (error.response.status === 404) {\r\n    return execute404Handler(props);\r\n  } else if (error.response.status === 500) {\r\n    return execute500Handler(props);\r\n  } else {\r\n    return executeOtherHandler(props);\r\n  }\r\n};\r\n","const auxiliary = (props) => props.children;\r\nexport default auxiliary;"],"sourceRoot":""}